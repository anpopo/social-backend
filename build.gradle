plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.moowork.node' version '1.3.1'  // npm plugin
}

group = 'com.anpopo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()  // https://plugins.gradle.org/m2
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// 테스트
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'

	// https://mvnrepository.com/artifact/com.moowork.gradle/gradle-node-plugin
	implementation group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '1.3.1'

	// querydsl
	implementation 'com.querydsl:querydsl-core:4.4.0'
	implementation 'com.querydsl:querydsl-jpa:4.4.0'
	annotationProcessor 'com.querydsl:querydsl-apt:4.1.4:jpa'  // querydsl JPA Annotation Processor
	// querydsl JPA Annotation Processor 사용
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def  generated = 'generated'

sourceSets {
	main {
		java {
			srcDirs += generated
			// exclude '**/uncompilable/**'
		}
	}
}

apply plugin: "com.moowork.node"
// npm using on gradle project

tasks.register("npm-Install"){
	group = "application"
	description = "Installs dependencies from package.json"
	tasks.appNpmInstall.exec();
}

task appNpmInstall(type: NpmTask) {
	// src/main/resources/static
	description = "Installs dependencies from package.json"
	workingDir = file("/src/main/resources/static")
	args = ['install']
}

test {
	useJUnitPlatform()
}

clean.doLast {
	file(generated).deleteDir()
}
